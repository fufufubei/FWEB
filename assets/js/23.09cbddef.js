(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{226:function(t,a,s){"use strict";s.r(a);var r=s(0),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[t._v("#")]),t._v(" 常用命令")]),t._v(" "),s("h2",{attrs:{id:"回滚"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回滚"}},[t._v("#")]),t._v(" 回滚")]),t._v(" "),s("h3",{attrs:{id:"中断合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中断合并"}},[t._v("#")]),t._v(" 中断合并")]),t._v(" "),s("p",[t._v("合并的时候，出现冲突，但是没有解决冲突，没有进行提交时，放弃合并")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    git merge --abort\n")])])]),s("p",[s("img",{attrs:{src:"/FWEB/images/study/git00.png",alt:"示例图片"}})]),t._v(" "),s("h3",{attrs:{id:"撤销合并"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销合并"}},[t._v("#")]),t._v(" 撤销合并")]),t._v(" "),s("p",[t._v("如果已经合并了代码，但是合并完成发现这是一个错误的合并；\nC6与C4进行合并后")]),t._v(" "),s("p",[s("img",{attrs:{src:"/FWEB/images/study/git01.png",alt:"示例图片"}})]),t._v(" "),s("h4",{attrs:{id:"方案1："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案1："}},[t._v("#")]),t._v(" 方案1：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    git reset --hard HEAD\n    # 或者使用更精准的指定回滚到某一次的commit上面\n    git reset --hard commit_id\n")])])]),s("p",[t._v("使用命令查看当前的提交状态：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    git log --graph --oneline\n")])])]),s("p",[s("img",{attrs:{src:"/FWEB/images/study/git02.png",alt:"示例图片"}})]),t._v(" "),s("p",[t._v("执行git reset --hard 3144260之后。可以看到master已经回退了")]),t._v(" "),s("p",[s("img",{attrs:{src:"/FWEB/images/study/git03.png",alt:"示例图片"}}),t._v(" "),s("img",{attrs:{src:"/FWEB/images/study/git04.png",alt:"示例图片"}})]),t._v(" "),s("h4",{attrs:{id:"方案2："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案2："}},[t._v("#")]),t._v(" 方案2：")]),t._v(" "),s("p",[t._v("git reset命令是使HEAD节点指向曾经提交的一个节点上，但是有时候想要保留每一个操作，我们可以使用git revert命令，它会创建新的提交，并撤销合并的内容。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("    git revert -m 1 HEAD\n")])])]),s("p",[s("img",{attrs:{src:"/FWEB/images/study/git05.png",alt:"示例图片"}}),t._v(" "),s("img",{attrs:{src:"/FWEB/images/study/git06.png",alt:"示例图片"}})]),t._v(" "),s("h3",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),s("p",[t._v("这里主要就是说合并出错的时候怎么办。\n还没commit：git merge --abort ，丢弃正在进行的合并\n已经commit：")]),t._v(" "),s("ul",[s("li",[t._v("git revert -m 1 HEAD 新建一个commit，并且回到合并之前的状态")]),t._v(" "),s("li",[t._v("git reset --hard commit_id 回退到指定的commit节点")])])])}),[],!1,null,null,null);a.default=e.exports}}]);